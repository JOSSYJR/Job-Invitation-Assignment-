// <auto-generated />
using System;
using DepartmentAPI_CQRS.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DepartmentAPI_CQRS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230226140531_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DepartmentAPI_CQRS.Domain.Entities.Department", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("departmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("parentDepartmentId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("parentDepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DepartmentAPI_CQRS.Domain.Entities.Department", b =>
                {
                    b.HasOne("DepartmentAPI_CQRS.Domain.Entities.Department", "parentDepartment")
                        .WithMany("ChildDepartments")
                        .HasForeignKey("parentDepartmentId");

                    b.Navigation("parentDepartment");
                });

            modelBuilder.Entity("DepartmentAPI_CQRS.Domain.Entities.Department", b =>
                {
                    b.Navigation("ChildDepartments");
                });
#pragma warning restore 612, 618
        }
    }
}
